# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ActivityDto {
  city: String!
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  owner: UserDto!
  price: Int!
  updatedAt: DateTime!
}

input CreateActivityInput {
  city: String!
  description: String!
  name: String!
  price: Int!
}

input CreateFavoriteInput {
  activityId: String!
  userId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createActivity(createActivityInput: CreateActivityInput!): ActivityDto!
  login(signInInput: SignInInput!): SignInDto!
  logout: Boolean!
  register(signUpInput: SignUpInput!): UserDto!
  toggleFavorite(createFavoriteInput: CreateFavoriteInput!): Boolean!
}

type PermissionDto {
  id: String!
  name: String!
}

type Query {
  GetUserFavoriteActivities(userId: String!): [ActivityDto!]!
  getActivities: [ActivityDto!]!
  getActivitiesByCity(activity: String, city: String!, price: Int): [ActivityDto!]!
  getActivitiesByUser: [ActivityDto!]!
  getActivity(id: String!): ActivityDto!
  getCities: [String!]!
  getLatestActivities: [ActivityDto!]!
  getMe: UserDtoWithRolesAndPermissions!
  getPermissionById(id: String!): PermissionDto!
  getPermissionByName(name: String!): PermissionDto!
  getPermissions: [PermissionDto!]!
  getRole(id: String!): RoleDtoWithPermissions!
  getRoleByName(name: String!): RoleDtoWithPermissions!
  getRoles: [RoleDtoWithPermissions!]!
  getUser(id: String!): UserDtoWithRolesAndPermissions!
  getUsers: [UserDtoWithRoles!]!
}

type RoleDto {
  id: String!
  name: String!
}

type RoleDtoWithPermissions {
  id: String!
  name: String!
  permissions: [PermissionDto]
}

type SignInDto {
  access_token: String!
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type UserDto {
  email: String!
  firstName: String!
  id: String!
  lastName: String!
}

type UserDtoWithRoles {
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  roles: [RoleDto]
}

type UserDtoWithRolesAndPermissions {
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  roles: [RoleDtoWithPermissions]
}